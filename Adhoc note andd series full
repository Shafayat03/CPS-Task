    /**
         1. 1-D Prefix Sums
         2. Difference Arrray
         3. 2-D prefix sum
         4. Find the sum of all subarray of an array
         5.Premutation
         6. A Score of set the difference between  its maximum
         value and minimum value. Find the sum of scores over all
         subarrays



    */


    /**
          Prefix Sum:

          n = 5
          index : 0 1 2 3 4
          value: 2 6 1 5 10
          prefix:2  6 7 12 22

          complexity : o(N)
          Query :
                    range :
                    1 3 = 10
                    2 4 = 16
                    1 5 = 22

                    l r = prefix[r] - prefix[l-1]
                    2 4 = 22 - 6 = 16

                    0 4 = prefix[r]

                    if(l == 0) ans = prefix[r]
                        karon -1 kono index nai array te
    */





#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int ar[n+1];
    for(int i=0;i<n;i++)cin>>ar[i];

    int pre[n+1];
    pre[0]=ar[0];

    for(int i=1;i<n;i++)
    {
        pre[i]=pre[i-1]+ar[i];
    }

    int q;
    cin>>q;
    while(q--)
    {
        int l,r;
        cin>>l>>r;
        if(l==0)cout<<pre[r]<<endl;
        else cout<<pre[r]-pre[l-1]<<endl;
    }
}





/// Spoj cumalitive sum query :




    /**
         1. 1-D Prefix Sums
         2. Difference Arrray
         3. 2-D prefix sum
         4. Find the sum of all subarray of an array
         5.Premutation
         6. A Score of set the difference between  its maximum
         value and minimum value. Find the sum of scores over all
         subarrays



    */


    /**
          Prefix Sum:

          n = 5
          index : 0 1 2 3 4
          value: 2 6 1 5 10
          prefix:2  6 7 12 22

          complexity : o(N)
          Query :
                    range :
                    1 3 = 10
                    2 4 = 16
                    1 5 = 22

                    l r = prefix[r] - prefix[l-1]
                    2 4 = 22 - 6 = 16

                    0 4 = prefix[r]

                    if(l == 0) ans = prefix[r]
                        karon -1 kono index nai array te
    */
