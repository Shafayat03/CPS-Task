
Discussed topics:

 • Array
 • Sorting
 • STL sort
 • Palindrome
 • Sub-array
 • Sub-sequence



#include<bits/stdc++.h>
using namespace std;

//Gloabally ---> 10 ^ 7
// data segment e store hoi tai size boor


int main()
{

    //array--> contigious memory block


    // array--> local size   10 ^ 6
  //  stag memory size kom ---> memory kom tai

    /// sum of a array print

    int n;
    long long int sum = 0;
    cin>>n;
    int arr[n];
    for(int i = 0; i<n; i++){
        cin>>arr[i];
        sum += arr[i];
    }
    cout << sum << "\n";
    return 0;
}



//Minimum number print from array -- Maximum o same just akta INT_Min dorte hobe 

#include<bits/stdc++.h>
using namespace std;



int main()
{
    //Minimum number print from array

    ///minimum

    int n;
    long long int sum = 0;
    cin>>n;
    int arr[n];
    for(int i = 0; i < n; i++){
        cin>>arr[i];
    }
    int minNum = INT_MAX;
    int pos;
    for(int i = 0; i< n; i++){
        if(arr[i] < minNum){
            minNum = arr[i];
            // i + 1 --> output 1 dekhaite hobe tai
            pos = i+1;
        }
    }
 cout << minNum << " " << pos << "\n";

    return 0;
}




/// How to print palindrome array


#include<bits/stdc++.h>
using namespace std;
  
// sequence :  1 2 2 1 -- > mil takbe akta r ek tar shate (1,4) && (2,3);

/*
   1,  2, 2, 1
   .         .
   .         .
/// i == (n - i - 1)


ei condition fill up korle oi array tah akta palindrome array


*/


int main()
{
   //G. palindrome array

   int n;
   long long int sum = 0;

   cin >> n;
   int arr[n];
   for(int i = 0; i < n; i++){
     cin >> arr[i];
   }
   int i = 0, j = n - 1,flag = 1;
   for(i = 0; i <= j; i++,j--)
   {
      // cout << "i: " <<i << " " << " j: "<< j << "\n";
       
    if(arr[i] != arr[j]){
          cout << "NO\n";
          flag = 0;
          break;
       }
   }
   if(flag == 1){
      cout << "YES\n";
    
   }



    return 0;
}





/// Bubble Sort Algorithms
/// Array Sortings --> Ascending && Decending order
/// Bubble Algorithms

BASICS***
/*
 
 
 
    Dui tah dui tah value check korbo
    
    left er value right er value er theke choto hole kicuy korbo nah move on korbo
     
    left er value right er value er theke Boro hole  Swap kore dibo  


    E rokom cholte thakbe joto k kn na ascending order e thake sob value 
    

*/



/// CODE OF BUBBLE SORT ALGO ***

//COMPLEXITY --- > O(n * n) 



#include<bits/stdc++.h>
using namespace std;
int main()
{


   int n;
   long long int sum = 0;

   cin >> n;
   int arr[n];
   for(int i = 0; i < n; i++){
     cin >> arr[i];
   }

  for(int i = 0; i < n - 1; i++ ){
    for(int j = 0; j < n - i - 1; j++){
        if(arr[j] >  arr[j + 1]){
            int temp = arr[j];
            arr[j] = arr[j + 1];
            arr[j + 1] = temp;
        }
    }
  }

  for(int i = 0; i < n; i++){
     cout << arr[i] << " ";
   }



    return 0;
}



/// Quick Sort Algo --- complexity bubble sort theke kom


#include<bits/stdc++.h>
using namespace std;
//comparator function
int comp(const void *a,const void *b){
    return *(const int *)a - *(const int *)b;
}


int main()
{


   int n;
   long long int sum = 0;

   cin >> n;
   int arr[n];
   for(int i = 0; i < n; i++){
     cin >> arr[i];
   }



//declare Quick SOrt algorithms
   qsort(arr, n, sizeof(int),comp);

   for(int i = 0; i < n; i++){
     cout << arr[i] << " ";
   }


    return 0;
}



