//Always use greedy in this kind of problems


/// knapsack problem----> Greedy
/// O - 1 knapsack problem --->Greedy kaj kore nah



// A. chewbacca and Number

#include<stdio.h>
#include<string.h>

int main()
{
    char a[25];
    scanf("%s",a);

    ///corner case 1st digit 1 hole  initail tah rakbo

    char tmp = a[0];
    int len = strlen(a);

    for(int i = 0; i < len; i++){

        int t = a[i] - '0';
         int revDigit = 9 - t;

      if(revDigit < t){
        a[i] = revDigit + '0';
      }



     //   a[i] = revDigit + '0';

    }

    if( a[0] == '0' ){
        a[0] = tmp;
    }


    for(int i = 0; i < len; i++)printf("%c", a[i]);


  return 0;
}






/// A. There Are Two Types of Burgers


#include<stdio.h>


int main()
{
      int t;
      scanf("%d",&t);
      
      while(t--){
        
        int numBuns, numPatti,numKut,priceHam,priceChicken;
        
        scanf("%d %d %d %d %d ",&numBuns,&numPatti, &numKut,&priceHam,&priceChicken);
        
        
        int mxPrice,mnPrice,mxPricePatti, mnPricePatti;
        
        
        if(priceHam > priceChicken){
            mxPrice = priceHam;
            mxPricePatti = numPatti;
            
            mnPrice = priceChicken;
            mnPricePatti = numKut; 
            
        }
        else{
             
             mxPrice = priceChicken;
             mxPricePatti = numKut;
             
             mnPrice = priceHam;
             mnPricePatti = numPatti;
            
        }
        
        int numBurger = numBuns / 2;
        int profit = 0;
        
        if(mxPricePatti >= numBurger ){
            numBurger = 0;
            profit += (numBurger * mxPrice);
        }
        else{
            numBurger -= mxPricePatti;
            
            profit += ( mxPrice * mxPricePatti);
            
        }
        
        /// for min profit
        
          if(mnPricePatti >= numBurger ){
           // numBurger = 0;
            profit += (numBurger * mnPrice);
        }
        else{
           // numBurger -= mnPricePatti;
            
            profit += ( mnPrice * mnPricePatti);
            
        }
        
        
        printf("%d\n",profit);
        
        
        
        
        
      }
    
  
  return 0;
}



/// Increasing array

#include<stdio.h>

const int mx = 2e5+123;

long long  a[mx];


int main()
{


    int n;

    scanf("%d",&n);

    for(int i = 0; i < n; i++) scanf("%lld",&a[i]);

    long long cnt = 0;

    for(int i = 1; i < n; i++){
        if(a[i] < a[i - 1]  ){
            cnt += (a[i-1] - a[i] );
             a[i] = a[i-1];
        }
    }


       printf("%lld",cnt);


  return 0;
}

