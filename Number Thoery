/// Primility Test 


bool isPRime(int n )
{

/// if we have to off compleixty
    
///  if(n < 2) return false;
/// if(n <= 3) return true;
/// if(n % 2 == 0) return false;


for(int i = 2; i * i <= n; i++    /// i += 2)
{

  if(n % i == 0) return false;
}
return true;
}

int main()
{
         int tc;
           cin >> tc;
      while(tc--)
{     
        isPrime();
}



/// L - 3 (Seive of Erathostenes)


void  Seive_me_bro()
 {
   int prime[n+3];
memset(prime, 0, sizeof(prime));

for(int i = 2; i * i <= n; i++)
{
     if(prime[i] == 0)
{
   for(int j = i * i; j <= n; j += i)
{
   prime[j] = 1;
   }
  }
}

for(int i = 2; i <= n; i++)
{
 if(prime[i] == 0) cout << i << " ";
}
cout << endl;
}

int main()
{
   int TC;
cin >> TC;

while(TC--)
{
  seive_me_bro();
}












