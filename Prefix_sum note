                /// Prefix sum Tecnique
// n = 5;
//index: 0 1 2 3 4
//value: 2 4 1 5 10
//Prefix:2 6 7 12 22

//Q(Query --> Range):
   // range:
           // 1 3 = 10
           //   l  r= prefix[r] - pefix-[l-1];
           //   2  4=  22        -  6  = 16
            ///if(l==0) ans = perfix[r];

///without prefix sum complexity--> n*Q;        ( 10^ 5 * 10^5 == 10 ^ 10)

///with prefix sum complexity --> Q + n          ( 10^ 5 * 10^5 == 2 * 10 ^ 5)


/// Code of prefix sum technique

#include<bits/stdc++.h>
using namespace std;


int main()
{
    int n;
    cin>>n;
    int ar[n+1];
    for(int i = 0;i<n; i++) cin>>ar[i];

    int pre[n+1];
    pre[0]=ar[0];

    for(int i = 1; i<n;i++)
    {
        pre[i]=pre[i-1]+ar[i];

    }
    /// Query input

    int q;
    cin>>q;
    while(q--)
    {
        int l,r;
    cin>>l>>r;
    if(l==0)cout<<pre[r]<<endl;
    else cout<<pre[r]-pre[l-1]<<endl;

    }




}
