#include<bits/stdc++.h>
using namespace std;
int main()
{
    ///vector declaration

    vector<int> v;
    //for add element use v.pus_back in vector
    v.push_back(1);
    v.push_back(2);
    v.push_back(3);
//output vector
    cout << v[0]<< " "<< v[1]<< " " << v[2] << endl;

// to change pevious element we can use this --> as is is dynamic we can change element whatever we want
    v[1] = 3;
    cout << v[0] << " " << v[1]<< " "<< v[2]<< endl;

   // To print vector size we can use v.size();

   cout << v.size() << endl;

    // we can print vector using for loop also like this
    for(int i = 0; i <v.size(); i++) cout <<v[i]<<" ";
    cout << endl;


    // we can declare vector as like also including some elements

    vector<int> v1 = {2,3,4};
    cout <<v1.size()<<endl;

    for(int i = 0; i < v1.size();i++) cout << v1[i]<<" ";
    cout << endl;

    // for erase all element of vector we use v.clear()

    v.clear();
    cout << v1.size()<<endl;
    for(int i = 0; i < v1.size(); i++) cout << v1[i]<<" ";
    cout << endl;

  // for iteratate a vector we can use this


  vector<int> a(5);

  cout << a.size() << endl; //5

// etarating a vector --> this case no matter about datatypes
  a = v1;//
  for(auto u : a) cout << u <<" " ; ///2 3 4 0 0
  cout << endl;

 //another case of iteration in this case we have to initialize the  datatypes

  vector<int>::iterator it;
  for(it = a.begin(); it != a.end(); it++) cout << *it << " "; //2 3 4 0 0

/// Sorting a vector

//a = {3,4,5,1,2}; // decare
 //declare staring point of sort and ending point

//sort( a.begin(),a.end()); //complexity -->O( n* log2(n))
cout << endl;
 for(auto u : a ) cout << u << " "; //1 2 3 4 5;
cout << endl;

// for reverse sort we use  rbegin() and rend()
//sort(a.rbegin(), a.rend());
for(auto u : a) cout << u << " ";
cout << endl;


// reversing vector using greater
a = {3,4,5,1,2};
//sort (a.begin(),a.end(),greater<int() );


for(auto u : a) cout << u << " "; /// 5 4 3 2 1`
cout << endl;

/// reverseing last element to first using reverse
a = { 3,4,5,1,2};
reverse(a.begin(),a.end());
for(auto u : a) cout << u << " "; // 2 1 5 4 3
cout << endl;

// resulting the last value
cout << a.back() << endl;//3
a.pop_back(); // O(1) complexity;
// to cut a element use pop_back;
cout << a.back() << endl; // 4
// output 1st elememt use 3
a = {3,4,5,1,2};
cout << *a.begin() << endl; // 3
// erasing a specific element of a vector
a.erase(a.begin()); // O(n) complexity


for(auto u : a ) cout << u << " "; // 4 5 1 2
cout << endl;
// adding + 2 with starting element

a.erase(a.begin()+2);
for(auto  u : a ) cout << u << " "; // 4 5 2
cout << endl;

a = {1,1,2,2,2,3,3};
unique(a.begin(),a.end());

for(auto u : a ) cout << u << " "; // 1 2 3 2 2 3 3
cout << endl;


a = {1,1,2,2,2,3,3};
int n = unique(a.begin(),a.end()) - a.begin();

cout << n << endl; // 3
for(int i = 0; i < n; i++) cout << a[i] << " "; /// 1 2 3
cout << endl;

/// printing max element of a vector
a = {2,3,1,5};
cout << max_element(a.begin, a.end()) - a.begin() << endl;//3
cout << *max_element(a.begin(),a.end()) << endl;///5



    return 0;
}
